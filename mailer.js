// Module for sending transactional emails via the SendGrid HTTP API.
// Requires `SENDGRID_API_KEY` binding when deploying the worker.

/**
 * Send a welcome email to a newly registered user.
 * @param {string} toEmail recipient address
 * @param {string} userName user name for greeting
 */
export async function sendWelcomeEmail(toEmail, userName, htmlTemplate, env) {
    const defaultHtml = `<h2>–ó–¥—Ä–∞–≤–µ–π, ${userName} üëã</h2>
<p>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º —Ç–∏, —á–µ —Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞ –≤ <strong>MyBody</strong> ‚Äì —Ç–≤–æ–µ—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∑–∞ –∑–¥—Ä–∞–≤–µ, –±–∞–ª–∞–Ω—Å–∏—Ä–∞–Ω–æ —Ö—Ä–∞–Ω–µ–Ω–µ –∏ –æ—Å—ä–∑–Ω–∞—Ç –∂–∏–≤–æ—Ç.</p>
<p>–ù–∞—à–∞—Ç–∞ –º–∏—Å–∏—è –µ –¥–∞ —Ç–∏ –ø–æ–º–æ–≥–Ω–µ–º –¥–∞ –ø–æ—Å—Ç–∏–≥–Ω–µ—à —Ü–µ–ª–∏—Ç–µ —Å–∏ —Å —è—Å–Ω–æ—Ç–∞, –ø–æ–¥–∫—Ä–µ–ø–∞ –∏ –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω –ø–æ–¥—Ö–æ–¥.</p>
<p>–û—á–∞–∫–≤–∞–π –æ—â–µ –ø–æ–ª–µ–∑–Ω–∏ —Ä–µ—Å—É—Ä—Å–∏ –∏ —Å—ä–≤–µ—Ç–∏ —Å—ä–≤—Å–µ–º —Å–∫–æ—Ä–æ.</p>
<p>–ë—ä–¥–∏ –∑–¥—Ä–∞–≤ –∏ –≤–¥—ä—Ö–Ω–æ–≤–µ–Ω!</p>
<p>‚Äì –ï–∫–∏–ø—ä—Ç –Ω–∞ MyBody</p>`
    const html = htmlTemplate ? htmlTemplate.replace(/%%USER_NAME%%/g, userName) : defaultHtml
    const apiKey = env?.SENDGRID_API_KEY
    if (!apiKey) {
        console.error('Missing SENDGRID_API_KEY')
        return
    }

    try {
        const resp = await fetch('https://api.sendgrid.com/v3/mail/send', {
            method: 'POST',
            headers: {
                Authorization: `Bearer ${apiKey}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                personalizations: [{ to: [{ email: toEmail }] }],
                from: { email: 'info@mybody.best' },
                subject: '–î–æ–±—Ä–µ –¥–æ—à—ä–ª –≤ MyBody!',
                content: [{ type: 'text/html', value: html }]
            })
        })
        if (!resp.ok) {
            const text = await resp.text()
            console.error('Failed to send welcome email:', resp.status, text)
        }
    } catch (error) {
        console.error('Failed to send welcome email:', error)
    }
}
